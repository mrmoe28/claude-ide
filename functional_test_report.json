{
  "test_summary": {
    "total_tests": 6,
    "passed": 5,
    "failed": 1,
    "errors": 0,
    "skipped": 0,
    "success_rate": 83.33
  },
  "detailed_results": [
    {
      "test_name": "Package.json Scripts Integrity",
      "feature_type": "FeatureType.INTEGRATION",
      "status": "TestStatus.PASSED",
      "description": "Check if all required NPM scripts are present",
      "expected": "All required scripts present",
      "actual": "All scripts found",
      "error_message": null,
      "execution_time": 0.0008540153503417969,
      "suggestions": []
    },
    {
      "test_name": "Dependency Installation",
      "feature_type": "FeatureType.INTEGRATION",
      "status": "TestStatus.PASSED",
      "description": "Check if dependencies are installed",
      "expected": "Dependencies properly installed",
      "actual": "428 dependencies found",
      "error_message": null,
      "execution_time": 0.001825094223022461,
      "suggestions": []
    },
    {
      "test_name": "File Structure Integrity",
      "feature_type": "FeatureType.INTEGRATION",
      "status": "TestStatus.PASSED",
      "description": "Check project file structure",
      "expected": "All required files and directories present",
      "actual": "File structure is complete",
      "error_message": null,
      "execution_time": 9.393692016601562e-05,
      "suggestions": []
    },
    {
      "test_name": "Component File Integrity",
      "feature_type": "FeatureType.UI_COMPONENT",
      "status": "TestStatus.PASSED",
      "description": "Check if component files exist",
      "expected": "All component files present",
      "actual": "All components found",
      "error_message": null,
      "execution_time": 0.00037479400634765625,
      "suggestions": []
    },
    {
      "test_name": "TypeScript Compilation",
      "feature_type": "FeatureType.INTEGRATION",
      "status": "TestStatus.PASSED",
      "description": "Check TypeScript compilation for errors",
      "expected": "No TypeScript errors",
      "actual": "TypeScript compilation successful",
      "error_message": null,
      "execution_time": 1.6836600303649902,
      "suggestions": []
    },
    {
      "test_name": "ESLint Compliance",
      "feature_type": "FeatureType.INTEGRATION",
      "status": "TestStatus.FAILED",
      "description": "Check ESLint compliance",
      "expected": "No linting errors",
      "actual": "ESLint errors found",
      "error_message": "\n> claude-code-ide@0.1.0 lint\n> next lint\n\n\n./src/components/ErrorBoundary.tsx\n87:54  Error: `'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.  react/no-unescaped-entities\n87:66  Error: `'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.  react/no-unescaped-entities\n\ninfo  - Need to disable some ESLint rules? Learn more here: https://nextjs.org/docs/app/api-reference/config/eslint#disabling-rules\n",
      "execution_time": 1.9911291599273682,
      "suggestions": [
        "Fix ESLint errors in source code",
        "Run 'npm run lint -- --fix' for auto-fixable issues",
        "Update ESLint configuration if needed"
      ]
    }
  ],
  "failed_features": [
    "ESLint Compliance"
  ],
  "critical_issues": [
    "ESLint Compliance"
  ],
  "fix_plan": {
    "immediate": [
      "Fix ESLint errors in source code",
      "Run 'npm run lint -- --fix' for auto-fixable issues"
    ],
    "short_term": [],
    "long_term": []
  },
  "recommendations": [
    "\u26a0\ufe0f Minor issues detected - easy to fix",
    "\ud83d\udd27 Focus on the failed tests first",
    "\u2705 Most functionality is working correctly"
  ],
  "next_steps": [
    "Address critical integration issues first",
    "Fix API endpoint configurations",
    "Resolve TypeScript and linting errors",
    "Implement missing components",
    "Add comprehensive error handling",
    "Set up proper testing infrastructure"
  ]
}